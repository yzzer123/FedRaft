// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: heartbeat_message.proto

package org.bupt.cad.fedraft.rpc.message;

public interface HeartbeatRequestOrBuilder extends
        // @@protoc_insertion_point(interface_extends:fedraft.HeartbeatRequest)
        com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 term = 1;</code>
     *
     * @return The term.
     */
    int getTerm();

    /**
     * <code>uint64 leader_id = 2;</code>
     *
     * @return The leaderId.
     */
    long getLeaderId();

    /**
     * <pre>
     * 之前发送模型的索引
     * </pre>
     *
     * <code>uint32 pre_model_index = 3;</code>
     *
     * @return The preModelIndex.
     */
    int getPreModelIndex();

    /**
     * <pre>
     * 之前发送模型的任期
     * </pre>
     *
     * <code>uint32 pre_model_term = 4;</code>
     *
     * @return The preModelTerm.
     */
    int getPreModelTerm();

    /**
     * <pre>
     * 之前发送模型的任期
     * </pre>
     *
     * <code>uint32 leader_model_index = 5;</code>
     *
     * @return The leaderModelIndex.
     */
    int getLeaderModelIndex();

    /**
     * <code>repeated uint64 node_ids = 6;</code>
     *
     * @return A list containing the nodeIds.
     */
    java.util.List<java.lang.Long> getNodeIdsList();

    /**
     * <code>repeated uint64 node_ids = 6;</code>
     *
     * @return The count of nodeIds.
     */
    int getNodeIdsCount();

    /**
     * <code>repeated uint64 node_ids = 6;</code>
     *
     * @param index The index of the element to return.
     * @return The nodeIds at the given index.
     */
    long getNodeIds(int index);

    /**
     * <pre>
     * 网络时延拓扑
     * </pre>
     *
     * <code>repeated uint32 network_delays = 7;</code>
     *
     * @return A list containing the networkDelays.
     */
    java.util.List<java.lang.Integer> getNetworkDelaysList();

    /**
     * <pre>
     * 网络时延拓扑
     * </pre>
     *
     * <code>repeated uint32 network_delays = 7;</code>
     *
     * @return The count of networkDelays.
     */
    int getNetworkDelaysCount();

    /**
     * <pre>
     * 网络时延拓扑
     * </pre>
     *
     * <code>repeated uint32 network_delays = 7;</code>
     *
     * @param index The index of the element to return.
     * @return The networkDelays at the given index.
     */
    int getNetworkDelays(int index);
}
