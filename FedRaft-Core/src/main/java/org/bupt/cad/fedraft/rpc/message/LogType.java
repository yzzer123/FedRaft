// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: log_message.proto

package org.bupt.cad.fedraft.rpc.message;

/**
 * Protobuf enum {@code fedraft.LogType}
 */
public enum LogType
        implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * TRAINER_TO_MANAGER = 0;   // 发生在模型汇总阶段
     * </pre>
     *
     * <code>CLIENT_TO_LEADER = 0;</code>
     */
    CLIENT_TO_LEADER(0),
    /**
     * <pre>
     * 发生在模型分发阶段
     * </pre>
     *
     * <code>LEADER_TO_CLIENT = 1;</code>
     */
    LEADER_TO_CLIENT(1),
    /**
     * <pre>
     * MANAGER_TO_TRAINER = 3;   // 发生在模型分发阶段
     * </pre>
     *
     * <code>CLIENT_TO_CLIENT = 2;</code>
     */
    CLIENT_TO_CLIENT(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * TRAINER_TO_MANAGER = 0;   // 发生在模型汇总阶段
     * </pre>
     *
     * <code>CLIENT_TO_LEADER = 0;</code>
     */
    public static final int CLIENT_TO_LEADER_VALUE = 0;
    /**
     * <pre>
     * 发生在模型分发阶段
     * </pre>
     *
     * <code>LEADER_TO_CLIENT = 1;</code>
     */
    public static final int LEADER_TO_CLIENT_VALUE = 1;
    /**
     * <pre>
     * MANAGER_TO_TRAINER = 3;   // 发生在模型分发阶段
     * </pre>
     *
     * <code>CLIENT_TO_CLIENT = 2;</code>
     */
    public static final int CLIENT_TO_CLIENT_VALUE = 2;
    private static final com.google.protobuf.Internal.EnumLiteMap<
            LogType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LogType>() {
                public LogType findValueByNumber(int number) {
                    return LogType.forNumber(number);
                }
            };
    private static final LogType[] VALUES = values();
    private final int value;

    LogType(int value) {
        this.value = value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LogType valueOf(int value) {
        return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LogType forNumber(int value) {
        switch (value) {
            case 0:
                return CLIENT_TO_LEADER;
            case 1:
                return LEADER_TO_CLIENT;
            case 2:
                return CLIENT_TO_CLIENT;
            default:
                return null;
        }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LogType>
    internalGetValueMap() {
        return internalValueMap;
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptor() {
        return org.bupt.cad.fedraft.rpc.message.LogMessage.getDescriptor().getEnumTypes().get(0);
    }

    public static LogType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
                    "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
    }

    public final int getNumber() {
        if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                    "Can't get the number of an unknown enum value.");
        }
        return value;
    }

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
    getValueDescriptor() {
        if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                    "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptorForType() {
        return getDescriptor();
    }

    // @@protoc_insertion_point(enum_scope:fedraft.LogType)
}

